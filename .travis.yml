language: cpp

matrix:
    include:

        ############ Linux build ############################

        - name: Linux build
          stage: build
          os: linux # Defaults to Ubuntu 16.04 at the time of writing - use `dist` to specify a different dist

          before_install:
              - sudo apt update -y
              #- sudo apt install -y build-essential cmake git gcc g++ libcurl4-openssl-dev libssl-dev make pkg-config tar wget zlib1g-dev
              - sudo apt install -y build-essential cmake git gcc g++ libcurl4-openssl-dev make pkg-config tar wget zlib1g-dev
              - sudo apt install -y tree # This is not required

              # # Install cmake
              # - gzipFilename="cmake-3.12.4-Linux-x86_64"
              # - wget -q "https://cmake.org/files/v3.12/$gzipFilename.tar.gz"
              # - tar -xzf "$gzipFilename.tar.gz"
              # - mv "$gzipFilename" cmake
              # - sudo mv cmake /usr/local/bin
              # - export PATH="$PATH:/usr/local/bin/cmake/bin"
              #
              # #- sudo apt install -y cmake3 git gcc g++ make pkg-config tar wget zlib1g-dev
              # - sudo apt install -y git gcc g++ make pkg-config tar wget zlib1g-dev

          script:
              - pwd

              # Create GCSSDK_3RDPARTY_HOME
              - export GCSSDK_3RDPARTY_HOME="$HOME/Workspace/thirdparty/gcssdk"
              - mkdir -p "$GCSSDK_3RDPARTY_HOME"

              # Build OpenSSL-1.0.2 from source
              - pushd .
              - mkdir -p "$HOME/Downloads"
              - cd $HOME/Downloads
              #- wget -q https://www.openssl.org/source/openssl-1.0.2n.tar.gz
              - wget -q https://www.openssl.org/source/openssl-1.0.2j.tar.gz
              - tar xf openssl-1.0.2j.tar.gz
              - cd $HOME/Downloads/openssl-1.0.2j
              #- ./config --shared # TODO Should build static libs
              - ./config --prefix="$GCSSDK_3RDPARTY_HOME/ssl" --openssldir="$GCSSDK_3RDPARTY_HOME/openssl"
              - make -j ${NCPU:-4}
              #- sudo make install
              - make install
              - popd

              - openssl version
              - tree -L 2 "$GCSSDK_3RDPARTY_HOME/ssl"
              - tree -L 4 "$GCSSDK_3RDPARTY_HOME/ssl/lib"
              - ls -la "$GCSSDK_3RDPARTY_HOME/ssl/lib/pkgconfig"
              - cmake --version

              # Build gcs
              # TODO Build with static openssl libs

              # These are the default openssl out dirs - may need to change these
              # These env vars are set so cmake knows where to find the libs
              # - export OPENSSL_ROOT_DIR=/usr/local/ssl
              # - export PKG_CONFIG_PATH=/usr/local/ssl/lib/pkgconfig

              # These are my custom openssl out dirs (see above for defaults)
              - export OPENSSL_ROOT_DIR="$GCSSDK_3RDPARTY_HOME"/ssl
              - export PKG_CONFIG_PATH="$GCSSDK_3RDPARTY_HOME"/ssl/lib/pkgconfig
              - ls "$OPENSSL_ROOT_DIR"
              - ls "$PKG_CONFIG_PATH"

              # Actually build gcs
              #- cmake -H. -Bcmake-out -DBUILD_TESTING=OFF -DCMAKE_VERBOSE_MAKEFILE=ON
              # The 'super' project downloads things, which I think we want to avoid
              # - or do we only want to avoid ssl, and download everything else?
              - export VERBOSE=1
              - cmake -Hsuper -Bcmake-out -DBUILD_TESTING=OFF -DCMAKE_VERBOSE_MAKEFILE=ON
              - cmake --build cmake-out -- -j ${NCPU:-4}

              - ls
              - ls -la cmake-out
              - ls cmake-out/external/curl/src/curl_project-stamp/curl_project-build-*.log
              - tree -L 3 cmake-out
              - ls -la cmake-out/build
              - ls -la cmake-out/build/google-cloud-cpp

          after_success:
              echo "Build successful"

        ############ Mac build ##############################

        - name: Mac build
          stage: build
          os: osx

          before_install:
              #brew install curl cmake libressl c-ares
              - brew install curl libressl c-ares

          script:
              - pwd
              - cmake --version

              - export OPENSSL_ROOT_DIR=/usr/local/opt/libressl
              #- cmake -H. -Bcmake-out -DBUILD_TESTING=OFF
              - cmake -Hsuper -Bcmake-out -DBUILD_TESTING=OFF
              - cmake --build cmake-out -- -j ${NCPU:-4}

              - ls
              - ls -la cmake-out
              - ls -la cmake-out/build

          after_success:
              echo "Build successful"
